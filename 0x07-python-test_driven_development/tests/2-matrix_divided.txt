'task 2 .. matrix divition module'
==================================

Import module:
   >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

test normal:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

test divid on -ve number:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], -3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

    >>> matrix_divided([['Hello', 'World'], [4, 5], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2], [4, 5], 'Hi')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 2], [4, 5, 6], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2], [4, 5], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 2, 3])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided('hi', 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
